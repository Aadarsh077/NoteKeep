{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aadarsh\\\\Desktop\\\\inotebook\\\\frontend\\\\src\\\\context\\\\notes\\\\NoteState.js\",\n  _s = $RefreshSig$();\nimport NoteContext from \"./NoteContext\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  const host = \"http://localhost:5000\";\n  const notesInitial = [];\n  const [notes, setNotes] = useState(notesInitial);\n\n  // Get all notes\n  const getNotes = async () => {\n    // API Call\n    const response = await fetch(`${host}/api/notes/fetchnotes`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRhNmJjYWZmMWU5ZWZlNzkxN2U4ZjllIn0sImlhdCI6MTY4ODY1MzYzMn0._1mxOOvPkME_sNrI9CkvHSN-yUIJ417Lt_7XDCAqd7s'\n      }\n    });\n    const json = await response.json();\n    console.log(json);\n    setNotes(json);\n  };\n\n  //Add a Note\n  const addNote = async (title, description, tag) => {\n    // API call\n    const response = await fetch(`${host}/api/notes/addnote`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRhNmJjYWZmMWU5ZWZlNzkxN2U4ZjllIn0sImlhdCI6MTY4ODY1MzYzMn0._1mxOOvPkME_sNrI9CkvHSN-yUIJ417Lt_7XDCAqd7s'\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const note = await response.json();\n    setNotes(notes.concat(note));\n  };\n  const deleteNote = async id => {\n    // API Call\n    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRhNmJjYWZmMWU5ZWZlNzkxN2U4ZjllIn0sImlhdCI6MTY4ODY1MzYzMn0._1mxOOvPkME_sNrI9CkvHSN-yUIJ417Lt_7XDCAqd7s'\n      }\n    });\n    const json = response.json();\n    console.log(json);\n    console.log(\"Deleting the note with id\" + id);\n    const newNotes = notes.filter(note => {\n      return note._id !== id;\n    });\n    setNotes(newNotes);\n  };\n\n  // Edit a Note\n  const editNote = async (id, title, description, tag) => {\n    // API Call\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRhNmJjYWZmMWU5ZWZlNzkxN2U4ZjllIn0sImlhdCI6MTY4ODY1MzYzMn0._1mxOOvPkME_sNrI9CkvHSN-yUIJ417Lt_7XDCAqd7s'\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = await response.json();\n    console.log(json);\n    let newNotes = JSON.parse(JSON.stringify(notes));\n    // Login to edit in client\n    for (let index = 0; index < newNotes.length; index++) {\n      const element = newNotes[index];\n      if (element._id === id) {\n        newNotes[index].title = title;\n        newNotes[index].description = description;\n        newNotes[index].tag = tag;\n        break;\n      }\n    }\n    setNotes(newNotes);\n  };\n  const [alert, setAlert] = useState(null);\n  const showAlert = _ref => {\n    let {\n      msg: message,\n      type: type\n    } = _ref;\n    setAlert({\n      message,\n      type\n    }), setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes,\n      setNotes,\n      addNote,\n      deleteNote,\n      getNotes,\n      editNote,\n      showAlert,\n      alert,\n      setAlert\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n_s(NoteState, \"+mBDMyJovi45xG4RakwMQPh12HY=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["NoteContext","useState","jsxDEV","_jsxDEV","NoteState","props","_s","host","notesInitial","notes","setNotes","getNotes","response","fetch","method","headers","json","console","log","addNote","title","description","tag","body","JSON","stringify","note","concat","deleteNote","id","newNotes","filter","_id","editNote","parse","index","length","element","alert","setAlert","showAlert","_ref","msg","message","type","setTimeout","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Aadarsh/Desktop/inotebook/frontend/src/context/notes/NoteState.js"],"sourcesContent":["import NoteContext from \"./NoteContext\";\r\nimport { useState } from \"react\";\r\n\r\nconst NoteState = (props)=>{\r\n    const host = \"http://localhost:5000\"\r\n    const notesInitial = []\r\n\r\n    const [notes, setNotes] = useState(notesInitial)\r\n\r\n    // Get all notes\r\n    const getNotes = async () => {\r\n      // API Call\r\n      const response = await fetch(`${host}/api/notes/fetchnotes`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRhNmJjYWZmMWU5ZWZlNzkxN2U4ZjllIn0sImlhdCI6MTY4ODY1MzYzMn0._1mxOOvPkME_sNrI9CkvHSN-yUIJ417Lt_7XDCAqd7s'\r\n        }\r\n      });\r\n      const json = await response.json()\r\n      console.log(json)\r\n      setNotes(json)\r\n    }\r\n\r\n    //Add a Note\r\n    const addNote = async (title, description, tag)=>{\r\n      // API call\r\n      const response = await fetch(`${host}/api/notes/addnote`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRhNmJjYWZmMWU5ZWZlNzkxN2U4ZjllIn0sImlhdCI6MTY4ODY1MzYzMn0._1mxOOvPkME_sNrI9CkvHSN-yUIJ417Lt_7XDCAqd7s'\r\n        },\r\n        body: JSON.stringify({title, description, tag})\r\n      });\r\n      \r\n      const note = await response.json();\r\n      setNotes(notes.concat(note))\r\n    }\r\n\r\n    const deleteNote = async (id)=>{\r\n      // API Call\r\n      const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRhNmJjYWZmMWU5ZWZlNzkxN2U4ZjllIn0sImlhdCI6MTY4ODY1MzYzMn0._1mxOOvPkME_sNrI9CkvHSN-yUIJ417Lt_7XDCAqd7s'\r\n        }\r\n      })\r\n      const json = response.json();\r\n      console.log(json)\r\n\r\n      console.log(\"Deleting the note with id\" + id);\r\n      const newNotes = notes.filter((note)=>{return note._id!==id})\r\n      setNotes(newNotes);\r\n    }\r\n    \r\n    // Edit a Note\r\n    const editNote = async (id, title, description, tag) => {\r\n      // API Call\r\n      const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjRhNmJjYWZmMWU5ZWZlNzkxN2U4ZjllIn0sImlhdCI6MTY4ODY1MzYzMn0._1mxOOvPkME_sNrI9CkvHSN-yUIJ417Lt_7XDCAqd7s'\r\n        },\r\n        body: JSON.stringify({title, description, tag})\r\n      })\r\n      const json = await response.json();\r\n      console.log(json);\r\n\r\n      let newNotes = JSON.parse(JSON.stringify(notes))\r\n      // Login to edit in client\r\n      for (let index = 0; index < newNotes.length; index++) {\r\n        const element = newNotes[index];\r\n        if (element._id === id){\r\n          newNotes[index].title = title;\r\n          newNotes[index].description = description;\r\n          newNotes[index].tag = tag;\r\n          break;\r\n        }\r\n      }\r\n      setNotes(newNotes);\r\n    }\r\n\r\n    const [alert, setAlert] = useState(null);\r\n    const showAlert = ({\r\n      msg: message,\r\n      type: type}) =>{\r\n      setAlert({message,type}),\r\n      setTimeout(()=>{\r\n        setAlert(null);\r\n      },1500);\r\n    }\r\n\r\n\r\n    return (\r\n        <NoteContext.Provider value={{notes, setNotes, addNote, deleteNote, getNotes, editNote, showAlert,alert,setAlert }}>\r\n            {props.children}\r\n        </NoteContext.Provider>\r\n    )\r\n}\r\n\r\nexport default NoteState;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}